generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id              String         @id @default(auto()) @map("_id") @db.ObjectId
  username        String         @unique
  password        String
  name            String?
  apartmentNumber Int?
  type            UserType
  buildings       UserBuilding[]
  messages        Message[]
}

model UserBuilding {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  buildingId String   @db.ObjectId
  userId     String   @db.ObjectId
  user       User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  building   Building @relation(fields: [buildingId], references: [id], onDelete: Cascade)
}

model Building {
  id         String            @id @default(auto()) @map("_id") @db.ObjectId
  number     Int               @unique
  apartments Apartment[]
  reports    Report[]
  messages   MessageBuilding[]
  users      UserBuilding[]
}

model Apartment {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  number     Int
  occupant   String?
  phone      String?
  email      String?
  tax        Float
  building   Building @relation(references: [id], fields: [buildingId])
  buildingId String   @db.ObjectId
}

model Report {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  date       String   @unique
  reportData Json
  building   Building @relation(references: [id], fields: [buildingId])
  buildingId String   @db.ObjectId
}

model Message {
  id          String            @id @default(auto()) @map("_id") @db.ObjectId
  createdAt   DateTime          @default(now())
  title       String
  content     String
  createdBy   User              @relation(fields: [createdById], references: [id])
  createdById String            @db.ObjectId
  buildings   MessageBuilding[]
}

model MessageBuilding {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  buildingId String   @db.ObjectId
  messageId  String   @db.ObjectId
  message    Message  @relation(fields: [messageId], references: [id], onDelete: Cascade)
  building   Building @relation(fields: [buildingId], references: [id], onDelete: Cascade)
}

enum UserType {
  HouseManager
  Cashier
  Guest
}
